name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Build
      run: go build hello_world.go
      
    - uses: actions/upload-artifact@main
      with:
        name: my-artifact
        path: hello_world

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
  
    - uses: actions/download-artifact@main
      with:
        name: my-artifact
        path: .
      
    - name: test
      run: |
        chmod +x hello_world
        ./hello_world > hello_output
        if grep --quiet 'hello world' hello_output; then
          echo 'everything is ok ðŸ˜ŠðŸ˜ŠðŸ˜Š'
        else
          echo '============================================='
          echo 'Dude, Something went wrong !!!'
          echo '---------------------------------------------'
          echo 'printing output'
          cat hello_output
          echo '============================================='
          exit 1
        fi
  
  artifactory:
    needs: [build,test]
    runs-on: ubuntu-latest
    environment: production
    steps:

    - uses: actions/download-artifact@main
      with:
        name: my-artifact
        path: .

    - name: download_cli
      run: curl -fL https://install-cli.jfrog.io | sh

    - name: configure_cli
      env:
        ARTI_URL: ${{ secrets.URL }}
        ARTI_TOKEN: ${{ secrets.TOKEN }}
      run: |
        echo $ARTI_URL $URL
        jf c add arti --artifactory-url $ARTI_URL --access-token $ARTI_TOKEN --xray-url https://fabienl.jfrog.io/xray

    - name: upload_artifact
      run: |
        jf c s
        jf rt u hello_world --server-id arti hello_world
        jf rt bp hello_world_go ${{github.run_number}} --server-id arti
        
        
        
